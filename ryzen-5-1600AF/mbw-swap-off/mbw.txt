$ mbw -n 5 `expr 6 \* 1024`
Long uses 8 bytes. Allocating 2*805306368 elements = 12884901888 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 5 runs per test.
0	Method: MEMCPY	Elapsed: 0.81610	MiB: 6144.00000	Copy: 7528.508 MiB/s
1	Method: MEMCPY	Elapsed: 0.81976	MiB: 6144.00000	Copy: 7494.913 MiB/s
2	Method: MEMCPY	Elapsed: 0.81882	MiB: 6144.00000	Copy: 7503.499 MiB/s
3	Method: MEMCPY	Elapsed: 0.82425	MiB: 6144.00000	Copy: 7454.040 MiB/s
4	Method: MEMCPY	Elapsed: 0.82295	MiB: 6144.00000	Copy: 7465.806 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.82038	MiB: 6144.00000	Copy: 7489.258 MiB/s
0	Method: DUMB	Elapsed: 0.39526	MiB: 6144.00000	Copy: 15544.395 MiB/s
1	Method: DUMB	Elapsed: 0.38000	MiB: 6144.00000	Copy: 16168.464 MiB/s
2	Method: DUMB	Elapsed: 0.38766	MiB: 6144.00000	Copy: 15849.062 MiB/s
3	Method: DUMB	Elapsed: 0.38860	MiB: 6144.00000	Copy: 15810.561 MiB/s
4	Method: DUMB	Elapsed: 0.38032	MiB: 6144.00000	Copy: 16154.732 MiB/s
AVG	Method: DUMB	Elapsed: 0.38637	MiB: 6144.00000	Copy: 15901.987 MiB/s
0	Method: MCBLOCK	Elapsed: 0.60060	MiB: 6144.00000	Copy: 10229.821 MiB/s
1	Method: MCBLOCK	Elapsed: 0.61446	MiB: 6144.00000	Copy: 9999.056 MiB/s
2	Method: MCBLOCK	Elapsed: 0.59542	MiB: 6144.00000	Copy: 10318.819 MiB/s
3	Method: MCBLOCK	Elapsed: 0.59478	MiB: 6144.00000	Copy: 10329.818 MiB/s
4	Method: MCBLOCK	Elapsed: 0.59422	MiB: 6144.00000	Copy: 10339.657 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.59989	MiB: 6144.00000	Copy: 10241.803 MiB/s
